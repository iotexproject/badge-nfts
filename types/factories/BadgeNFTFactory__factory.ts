/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BadgeNFTFactory,
  BadgeNFTFactoryInterface,
} from "../BadgeNFTFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_instance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bool",
        name: "withTokenId",
        type: "bool",
      },
    ],
    name: "createNFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "instance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_instance",
        type: "address",
      },
    ],
    name: "setInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107d23803806107d283398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6106e6806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063715018a611610050578063715018a6146100ce5780638da5cb5b146100d6578063f2fde38b146100e757600080fd5b8063022ec095146100775780630a353a04146100a65780630dc4e19b146100bb575b600080fd5b60015461008a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100b96100b4366004610559565b6100fa565b005b61008a6100c9366004610589565b610188565b6100b961026c565b6000546001600160a01b031661008a565b6100b96100f5366004610559565b6102d2565b6000546001600160a01b031633146101595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60015460009081906101a2906001600160a01b03166103b4565b60405163161ba81360e11b81529091506001600160a01b03821690632c375026906101d7908990899089908990600401610676565b600060405180830381600087803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038416925063f2fde38b9150602401600060405180830381600087803b15801561024a57600080fd5b505af115801561025e573d6000803e3d6000fd5b509298975050505050505050565b6000546001600160a01b031633146102c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610150565b6102d0600061046f565b565b6000546001600160a01b0316331461032c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610150565b6001600160a01b0381166103a85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610150565b6103b18161046f565b50565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09150506001600160a01b03811661046a5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610150565b919050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082601f8301126104dd57600080fd5b813567ffffffffffffffff808211156104f8576104f86106c3565b604051601f8301601f19908116603f01168101908282118183101715610520576105206106c3565b8160405283815286602085880101111561053957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561056b57600080fd5b81356001600160a01b038116811461058257600080fd5b9392505050565b6000806000806080858703121561059f57600080fd5b843567ffffffffffffffff808211156105b757600080fd5b6105c3888389016104cc565b955060208701359150808211156105d957600080fd5b6105e5888389016104cc565b945060408701359150808211156105fb57600080fd5b50610608878288016104cc565b9250506060850135801515811461061e57600080fd5b939692955090935050565b6000815180845260005b8181101561064f57602081850181015186830182015201610633565b81811115610661576000602083870101525b50601f01601f19169290920160200192915050565b6080815260006106896080830187610629565b828103602084015261069b8187610629565b905082810360408401526106af8186610629565b915050821515606083015295945050505050565b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000807000a";

export class BadgeNFTFactory__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _instance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadgeNFTFactory> {
    return super.deploy(_instance, overrides || {}) as Promise<BadgeNFTFactory>;
  }
  getDeployTransaction(
    _instance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_instance, overrides || {});
  }
  attach(address: string): BadgeNFTFactory {
    return super.attach(address) as BadgeNFTFactory;
  }
  connect(signer: Signer): BadgeNFTFactory__factory {
    return super.connect(signer) as BadgeNFTFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadgeNFTFactoryInterface {
    return new utils.Interface(_abi) as BadgeNFTFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadgeNFTFactory {
    return new Contract(address, _abi, signerOrProvider) as BadgeNFTFactory;
  }
}
