/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BlockHash, BlockHashInterface } from "../BlockHash";

const _abi = [
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bn",
        type: "uint256",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "last",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setLast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061016f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806357e871e71161005057806357e871e7146100a5578063b189fd4c146100ad578063f4a997a8146100c057610072565b80633d8ca7b01461007757806347799da81461009557806352bfe7891461009d575b600080fd5b61007f6100ca565b60405161008c9190610136565b60405180910390f35b61007f6100d0565b61007f6100d6565b61007f6100e9565b61007f6100bb36600461011e565b6100fb565b6100c86100ff565b005b60005481565b60015481565b60006100e360014361013f565b40905090565b60006100f660014361013f565b905090565b4090565b61010a60014361013f565b60005561011860014361013f565b40600155565b60006020828403121561012f578081fd5b5035919050565b90815260200190565b60008282101561015d57634e487b7160e01b81526011600452602481fd5b50039056fea164736f6c6343000800000a";

export class BlockHash__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlockHash> {
    return super.deploy(overrides || {}) as Promise<BlockHash>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BlockHash {
    return super.attach(address) as BlockHash;
  }
  connect(signer: Signer): BlockHash__factory {
    return super.connect(signer) as BlockHash__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockHashInterface {
    return new utils.Interface(_abi) as BlockHashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlockHash {
    return new Contract(address, _abi, signerOrProvider) as BlockHash;
  }
}
