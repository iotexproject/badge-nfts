/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  StakingEncoding,
  StakingEncodingInterface,
} from "../StakingEncoding";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "candName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "duration",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "autoStake",
        type: "bool",
      },
      {
        internalType: "uint8[]",
        name: "data",
        type: "uint8[]",
      },
    ],
    name: "createStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class StakingEncoding__factory {
  static readonly abi = _abi;
  static createInterface(): StakingEncodingInterface {
    return new utils.Interface(_abi) as StakingEncodingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingEncoding {
    return new Contract(address, _abi, signerOrProvider) as StakingEncoding;
  }
}
